{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabir\\\\Documents\\\\github\\\\DF-Team-Full-Stack\\\\frontend\\\\src\\\\Components\\\\SignupForm.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignupForm = ({\n  switchPage,\n  setMessage\n}) => {\n  _s();\n\n  const url = `${process.env.REACT_APP_DB_URI}/auth/signup`;\n  const [responseMsg, setResponseMsg] = useState();\n  const [confirmPassword, setConfirmPassword] = useState();\n  const [user, setUser] = useState({\n    email: ``,\n    companyName: ``,\n    password: ``\n  });\n\n  const onChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUser({ ...user,\n      [name]: value\n    });\n  };\n\n  const register = () => {\n    axios.post(url, user).then(response => {\n      setMessage( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"confirm-msg\",\n        children: \"Account created! Please login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 28\n      }, this));\n      switchPage();\n    }).catch(err => {\n      setResponseMsg( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-msg\",\n        \"data-testid\": \"error\",\n        children: \"This email already exists\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 32\n      }, this));\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (user.password !== confirmPassword) {\n      setResponseMsg( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-msg\",\n        \"data-testid\": \"error\",\n        children: \" Password and confirm password are not equal \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 28\n      }, this));\n    }\n\n    if (user.email && user.password && user.companyName && user.password === confirmPassword) {\n      register();\n      setUser({\n        email: ``,\n        companyName: ``,\n        password: ``\n      });\n      setConfirmPassword(``);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    action: \"/industryPartner\",\n    className: \"signup\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"field\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        \"data-testid\": \"email\",\n        value: user.email,\n        placeholder: \"Email Address\",\n        name: \"email\",\n        onChange: onChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"field\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        \"data-testid\": \"company\",\n        value: user.companyName,\n        placeholder: \"Associate company name\",\n        name: \"companyName\",\n        onChange: onChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"field\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        \"data-testid\": \"password\",\n        value: user.password,\n        placeholder: \"Password\",\n        name: \"password\",\n        onChange: onChange,\n        required: true,\n        minLength: 8\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"field\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        \"data-testid\": \"confirm-password\",\n        placeholder: \"Confirm password\",\n        value: confirmPassword,\n        name: \"confirm-password\",\n        onChange: event => setConfirmPassword(event.target.value),\n        required: true,\n        minLength: 8\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"field btn\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-layer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        \"data-testid\": \"submit\",\n        value: \"Signup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), responseMsg]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignupForm, \"Cqbm/QYHOj2o7++gcbZLCx+vBOE=\");\n\n_c = SignupForm;\nexport default SignupForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignupForm\");","map":{"version":3,"sources":["C:/Users/gabir/Documents/github/DF-Team-Full-Stack/frontend/src/Components/SignupForm.jsx"],"names":["axios","useState","SignupForm","switchPage","setMessage","url","process","env","REACT_APP_DB_URI","responseMsg","setResponseMsg","confirmPassword","setConfirmPassword","user","setUser","email","companyName","password","onChange","event","name","value","target","register","post","then","response","catch","err","handleSubmit","preventDefault"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { useState } from 'react';\n\nconst SignupForm = ({ switchPage, setMessage }) => {\n    const url = `${process.env.REACT_APP_DB_URI}/auth/signup`;\n\n    const [responseMsg, setResponseMsg] = useState();\n    const [confirmPassword, setConfirmPassword] = useState();\n    const [user, setUser] = useState({\n        email: ``,\n        companyName: ``,\n        password: ``,\n    });\n\n    const onChange = event => {\n        const { name, value } = event.target;\n        setUser({\n            ...user,\n            [name]: value\n        });\n    }\n\n    const register = () => {\n        axios.post(url, user)\n            .then(response => {\n                setMessage(<div className=\"confirm-msg\">Account created! Please login</div>)\n                switchPage();\n            })\n            .catch(err => {\n                setResponseMsg(<div className='error-msg' data-testid=\"error\">This email already exists</div>)\n            });\n    }\n\n    const handleSubmit = event => {\n        event.preventDefault();\n\n        if (user.password !== confirmPassword) {\n            setResponseMsg(<div className='error-msg' data-testid=\"error\"> Password and confirm password are not equal </div>)\n        }\n        if (user.email && user.password && user.companyName && user.password === confirmPassword) {\n            register();\n\n            setUser({\n                email: ``,\n                companyName: ``,\n                password: ``\n            });\n            setConfirmPassword(``);\n        }\n    }\n\n    return (\n\n        <form action=\"/industryPartner\" className=\"signup\" onSubmit={handleSubmit} >\n\n            <div className=\"field\">\n                <input type=\"email\" data-testid=\"email\" value={user.email} placeholder='Email Address' name=\"email\" onChange={onChange} required />\n            </div>\n            <div className=\"field\">\n                <input type=\"text\" data-testid=\"company\" value={user.companyName} placeholder='Associate company name' name=\"companyName\" onChange={onChange} required />\n            </div>\n            <div className=\"field\">\n                <input type=\"password\" data-testid=\"password\" value={user.password} placeholder='Password' name=\"password\" onChange={onChange} required minLength={8} />\n            </div>\n            <div className=\"field\">\n                <input type=\"password\" data-testid=\"confirm-password\" placeholder='Confirm password' value={confirmPassword} name=\"confirm-password\" onChange={event => setConfirmPassword(event.target.value)} required minLength={8} />\n            </div>\n            <div className=\"field btn\">\n                <div className=\"btn-layer\"></div>\n                <input type=\"submit\" data-testid=\"submit\" value=\"Signup\" />\n            </div>\n            {responseMsg}\n        </form >\n    )\n}\n\nexport default SignupForm;"]},"metadata":{},"sourceType":"module"}